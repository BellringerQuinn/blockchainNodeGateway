// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	model "github.com/BellringerQuinn/blockchainNodeGateway/model"
	mock "github.com/stretchr/testify/mock"
)

// ResourceFetcher is an autogenerated mock type for the ResourceFetcher type
type ResourceFetcher struct {
	mock.Mock
}

// FetchResource provides a mock function with given fields: resource, network
func (_m *ResourceFetcher) FetchResource(resource model.Resource, network model.Network) (string, error) {
	ret := _m.Called(resource, network)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(model.Resource, model.Network) (string, error)); ok {
		return rf(resource, network)
	}
	if rf, ok := ret.Get(0).(func(model.Resource, model.Network) string); ok {
		r0 = rf(resource, network)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(model.Resource, model.Network) error); ok {
		r1 = rf(resource, network)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewResourceFetcher interface {
	mock.TestingT
	Cleanup(func())
}

// NewResourceFetcher creates a new instance of ResourceFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResourceFetcher(t mockConstructorTestingTNewResourceFetcher) *ResourceFetcher {
	mock := &ResourceFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
